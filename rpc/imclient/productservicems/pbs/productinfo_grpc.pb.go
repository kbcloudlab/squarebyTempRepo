// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: rpc/imserver/protos/servicedefinition/productinfo.proto

package pbs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProductInfoServiceClient is the client API for ProductInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProductInfoServiceClient interface {
	GetProductShortInfoByIdList(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*ProductShortInfoResponseList, error)
}

type productInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductInfoServiceClient(cc grpc.ClientConnInterface) ProductInfoServiceClient {
	return &productInfoServiceClient{cc}
}

func (c *productInfoServiceClient) GetProductShortInfoByIdList(ctx context.Context, in *ProductInfoRequest, opts ...grpc.CallOption) (*ProductShortInfoResponseList, error) {
	out := new(ProductShortInfoResponseList)
	err := c.cc.Invoke(ctx, "/servicedefinition.ProductInfoService/GetProductShortInfoByIdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductInfoServiceServer is the server API for ProductInfoService service.
// All implementations must embed UnimplementedProductInfoServiceServer
// for forward compatibility
type ProductInfoServiceServer interface {
	GetProductShortInfoByIdList(context.Context, *ProductInfoRequest) (*ProductShortInfoResponseList, error)
	mustEmbedUnimplementedProductInfoServiceServer()
}

// UnimplementedProductInfoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedProductInfoServiceServer struct {
}

func (UnimplementedProductInfoServiceServer) GetProductShortInfoByIdList(context.Context, *ProductInfoRequest) (*ProductShortInfoResponseList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductShortInfoByIdList not implemented")
}
func (UnimplementedProductInfoServiceServer) mustEmbedUnimplementedProductInfoServiceServer() {}

// UnsafeProductInfoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProductInfoServiceServer will
// result in compilation errors.
type UnsafeProductInfoServiceServer interface {
	mustEmbedUnimplementedProductInfoServiceServer()
}

func RegisterProductInfoServiceServer(s grpc.ServiceRegistrar, srv ProductInfoServiceServer) {
	s.RegisterService(&ProductInfoService_ServiceDesc, srv)
}

func _ProductInfoService_GetProductShortInfoByIdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductInfoServiceServer).GetProductShortInfoByIdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/servicedefinition.ProductInfoService/GetProductShortInfoByIdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductInfoServiceServer).GetProductShortInfoByIdList(ctx, req.(*ProductInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProductInfoService_ServiceDesc is the grpc.ServiceDesc for ProductInfoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProductInfoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "servicedefinition.ProductInfoService",
	HandlerType: (*ProductInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductShortInfoByIdList",
			Handler:    _ProductInfoService_GetProductShortInfoByIdList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/imserver/protos/servicedefinition/productinfo.proto",
}
